{
	"info": {
		"_postman_id": "syrian-archive-api-collection",
		"name": "Syrian Archive API",
		"description": "Complete API collection for the Syrian Archive Django application. This collection includes authentication, user management, posts, comments, people, events, and verification endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "{{base_url}}",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Get JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('jwt_token', response.access);",
									"    pm.environment.set('refresh_token', response.refresh);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/token/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"token",
								""
							]
						},
						"description": "Obtain JWT access and refresh tokens for authentication"
					}
				},
				{
					"name": "Refresh JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('jwt_token', response.access);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/token/refresh/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"token",
								"refresh",
								""
							]
						},
						"description": "Refresh JWT access token using refresh token"
					}
				},
				{
					"name": "API Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login",
								""
							]
						},
						"description": "Login via API endpoint"
					}
				}
			],
			"description": "Authentication endpoints for JWT tokens and API login"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						},
						"description": "Get list of all users"
					}
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}",
								""
							]
						},
						"description": "Get specific user details by ID"
					}
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/profile/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"profile",
								""
							]
						},
						"description": "Get current user's profile"
					}
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Updated Name\",\n    \"last_name\": \"Updated Last Name\",\n    \"email\": \"updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/profile/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"profile",
								""
							]
						},
						"description": "Update current user's profile"
					}
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get All Posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/posts/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "search",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get list of all posts with optional pagination and search"
					}
				},
				{
					"name": "Create Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Post Title\",\n    \"content\": \"This is the content of the new post\",\n    \"event\": {{event_id}},\n    \"location\": \"Damascus, Syria\",\n    \"date_occurred\": \"2024-01-15\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								""
							]
						},
						"description": "Create a new post"
					}
				},
				{
					"name": "Get Post by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								""
							]
						},
						"description": "Get specific post details by ID"
					}
				},
				{
					"name": "Update Post",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Post Title\",\n    \"content\": \"Updated content of the post\",\n    \"location\": \"Aleppo, Syria\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								""
							]
						},
						"description": "Update an existing post"
					}
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								""
							]
						},
						"description": "Delete a post"
					}
				},
				{
					"name": "Get My Posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/posts/my/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"my",
								""
							]
						},
						"description": "Get current user's posts"
					}
				}
			],
			"description": "Post management endpoints"
		},
		{
			"name": "Post Interactions",
			"item": [
				{
					"name": "Toggle Like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/like/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								"like",
								""
							]
						},
						"description": "Like or unlike a post"
					}
				},
				{
					"name": "Toggle Trust",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/trust/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								"trust",
								""
							]
						},
						"description": "Trust or untrust a post"
					}
				},
				{
					"name": "Report Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reason\": \"inappropriate_content\",\n    \"description\": \"This post contains inappropriate content\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/report/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								"report",
								""
							]
						},
						"description": "Report a post for inappropriate content"
					}
				},
				{
					"name": "Verify Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"verification_type\": \"fact_check\",\n    \"notes\": \"Verified through multiple sources\",\n    \"is_verified\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/verify/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								"verify",
								""
							]
						},
						"description": "Verify a post's authenticity"
					}
				}
			],
			"description": "Post interaction endpoints (like, trust, report, verify)"
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get Post Comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/comments/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								"comments",
								""
							]
						},
						"description": "Get all comments for a specific post"
					}
				},
				{
					"name": "Create Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"This is a comment on the post\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/posts/{{post_id}}/comments/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"posts",
								"{{post_id}}",
								"comments",
								""
							]
						},
						"description": "Create a new comment on a post"
					}
				},
				{
					"name": "Get Comment by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/comments/{{comment_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"comments",
								"{{comment_id}}",
								""
							]
						},
						"description": "Get specific comment details by ID"
					}
				},
				{
					"name": "Update Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Updated comment content\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/comments/{{comment_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"comments",
								"{{comment_id}}",
								""
							]
						},
						"description": "Update an existing comment"
					}
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/comments/{{comment_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"comments",
								"{{comment_id}}",
								""
							]
						},
						"description": "Delete a comment"
					}
				}
			],
			"description": "Comment management endpoints"
		},
		{
			"name": "People",
			"item": [
				{
					"name": "Get All People",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/persons/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"persons",
								""
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get list of all people with optional search"
					}
				},
				{
					"name": "Create Person",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"age\": 30,\n    \"location\": \"Damascus, Syria\",\n    \"description\": \"Person description\",\n    \"status\": \"missing\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/persons/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"persons",
								""
							]
						},
						"description": "Create a new person record"
					}
				},
				{
					"name": "Get Person by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/persons/{{person_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"persons",
								"{{person_id}}",
								""
							]
						},
						"description": "Get specific person details by ID"
					}
				},
				{
					"name": "Update Person",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"status\": \"found\",\n    \"description\": \"Updated description\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/persons/{{person_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"persons",
								"{{person_id}}",
								""
							]
						},
						"description": "Update an existing person record"
					}
				},
				{
					"name": "Delete Person",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/persons/{{person_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"persons",
								"{{person_id}}",
								""
							]
						},
						"description": "Delete a person record"
					}
				}
			],
			"description": "People management endpoints"
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get All Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/events/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"events",
								""
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get list of all events with optional search"
					}
				},
				{
					"name": "Create Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Event\",\n    \"description\": \"Event description\",\n    \"date\": \"2024-01-15\",\n    \"location\": \"Damascus, Syria\",\n    \"event_type\": \"conflict\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/events/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"events",
								""
							]
						},
						"description": "Create a new event"
					}
				},
				{
					"name": "Get Event by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/events/{{event_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"events",
								"{{event_id}}",
								""
							]
						},
						"description": "Get specific event details by ID"
					}
				},
				{
					"name": "Update Event",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Event Name\",\n    \"description\": \"Updated event description\",\n    \"location\": \"Aleppo, Syria\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/events/{{event_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"events",
								"{{event_id}}",
								""
							]
						},
						"description": "Update an existing event"
					}
				},
				{
					"name": "Delete Event",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/events/{{event_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"events",
								"{{event_id}}",
								""
							]
						},
						"description": "Delete an event"
					}
				}
			],
			"description": "Event management endpoints"
		},
		{
			"name": "Verification Requests",
			"item": [
				{
					"name": "Create Verification Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request_type\": \"role_upgrade\",\n    \"description\": \"Request for role upgrade to journalist\",\n    \"supporting_documents\": \"Document links or references\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/verification-requests/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"verification-requests",
								""
							]
						},
						"description": "Create a new verification request"
					}
				},
				{
					"name": "Get My Verification Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/verification-requests/my/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"verification-requests",
								"my",
								""
							]
						},
						"description": "Get current user's verification requests"
					}
				}
			],
			"description": "Verification request endpoints"
		}
	]
}